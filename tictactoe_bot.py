# -*- coding: utf-8 -*-
"""TicTacToe Bot.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/14tT3mFRH59jGMnoyL-cd7GpXSYmnWcnq
"""

board=[['_' for _ in range(3)] for _ in range(3)]
print(board)

def isboardfull():
  if (('_' in board[0]) or ('_' in board[1]) or ('_' in board[2])):
    return False
  else:
    return True

def playerturn(p):
  if p==True:
    return 'X'
  else:
    return '0'

def showboard():
  for x in board:
    for y in x:
      print(y,end='')
    print('\n')

def winner(board):
  if((board[0][0]==board[1][1]==board[2][2]=='X') or (board[0][0]==board[1][1]==board[2][2]=='0')):
    return True
  if((board[2][0]==board[1][1]==board[0][2]=='X') or (board[2][0]==board[1][1]==board[0][2]=='0')):
    return True
  if((board[0][0]==board[0][1]==board[0][2]=='X') or (board[0][0]==board[0][1]==board[0][2]=='0')):
    return True
  if((board[1][0]==board[1][1]==board[1][2]=='X') or (board[1][0]==board[1][1]==board[1][2]=='0')):
    return True
  if((board[2][0]==board[2][1]==board[2][2]=='X') or (board[2][0]==board[2][1]==board[2][2]=='0')):
    return True
  if((board[0][0]==board[1][0]==board[2][0]=='X') or (board[0][0]==board[1][0]==board[2][0]=='0')):
    return True
  if((board[0][1]==board[1][1]==board[2][1]=='X') or (board[0][1]==board[1][1]==board[2][1]=='0')):
    return True
  if((board[0][2]==board[1][2]==board[2][2]=='X') or (board[0][2]==board[1][2]==board[2][2]=='0')):
    return True
  return False

def computerplays():
  
  #Check for our Win
  boardcopy=board;
  for i in range(0,9):
    if(boardcopy[int(i/3)][i%3]=='_'):
      
      boardcopy[int(i/3)][i%3]='0'
      if(winner(boardcopy)):
        return int(i/3),i%3
      else:
        boardcopy[int(i/3)][i%3]='_'
  
  #Avoid opponent Wins
  for i in range(0,9):
    if(boardcopy[int(i/3)][i%3]=='_'):    
      
      boardcopy[int(i/3)][i%3]='X'
      if(winner(boardcopy)):
        return int(i/3),i%3
      else:
        boardcopy[int(i/3)][i%3]='_'
      
  if(boardcopy[0][0]==boardcopy[0][2]==boardcopy[2][0]==boardcopy[2][2]=='_'):
    return 0,0
  elif(boardcopy[1][1]=='_'):
    return 1,1
  else:
    for j in [1,3,5,7]:
      if(boardcopy[int(j/3)][j%3]=='_'):
        return int(j/3),j%3

print('Player 1: X, Player 2:0')
player1=True

while(not isboardfull()):
  
  if(player1==False):
    row,col=computerplays()
  else:
    row=int(input("Enter row:"))
    col=int(input("Enter col:"))
    
  board[row][col]=playerturn(player1)
  showboard()
  if winner(board):
    if player1==True:
      print('User wins')
      break
    else:
      print('Computer wins')
      break
  
  player1=not player1